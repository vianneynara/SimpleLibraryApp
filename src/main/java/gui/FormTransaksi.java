package gui;/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import backend.DataPerpus;
import backend.DatabaseHandler;
import backend.KeranjangKoleksi;
import backend.koleksi.Buku;
import backend.koleksi.Disk;
import backend.koleksi.Koleksi;
import backend.koleksi.Majalah;
import backend.peminjam.Peminjam;
import backend.transaksi.Transaksi;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Objects;

/**
 * @author narwa
 */
public class FormTransaksi extends javax.swing.JFrame {

	private final Color I_RED = new Color(0xFF5959);
	/**
	 * Atribut kelas ini menyimpan data dari data perpustakaan.
	 */
	public DataPerpus dataPerpus;
	private KeranjangKoleksi keranjangKoleksi;
	private Peminjam currentPeminjam;
	private Koleksi currentKoleksi;

	/**
	 * Creates new form FormTransaksi
	 */
	public FormTransaksi(DataPerpus dataPerpus) {
		this.dataPerpus = new DataPerpus();
        this.keranjangKoleksi = new KeranjangKoleksi();
		initComponents();
		setTitle("Input Transaksi Peminjaman");

		/* Mengatur icon/gambar judul pada window frame */
		setIconImage(
			new ImageIcon(
				Objects.requireNonNull(
					getClass().getResource("/images/bookIcon.png"))
			).getImage()
		);
        updateTabelTransaksi();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_Koleksi = new javax.swing.JPanel();
        b_cariKoleksi = new javax.swing.JButton();
        i_judulKoleksi = new java.awt.TextField();
        i_kodeKoleksi = new java.awt.TextField();
        l_pencarianKoleksi = new javax.swing.JLabel();
        f_judulKoleksi = new java.awt.TextField();
        l_nama = new javax.swing.JLabel();
        f_penerbit = new java.awt.TextField();
        l_penerbit = new javax.swing.JLabel();
        l_isbnIssn = new javax.swing.JLabel();
        f_isbnIssn = new java.awt.TextField();
        f_tipeKoleksi = new java.awt.TextField();
        l_tipeKoleksi = new javax.swing.JLabel();
        b_tambahKoleksi = new javax.swing.JButton();
        b_hapusKoleksi = new javax.swing.JButton();
        f_ketersediaan = new java.awt.TextField();
        panel_PeminjamDeadline = new javax.swing.JPanel();
        l_pencarianPeminjam = new javax.swing.JLabel();
        i_namaPeminjam = new java.awt.TextField();
        i_kodePeminjam = new java.awt.TextField();
        l_namaPeminjam = new javax.swing.JLabel();
        f_namaPeminjam = new java.awt.TextField();
        f_maksPinjam = new java.awt.TextField();
        l_lamaPinjam = new javax.swing.JLabel();
        i_lamaPinjam = new javax.swing.JComboBox<>();
        l_dari = new javax.swing.JLabel();
        f_dari = new java.awt.TextField();
        b_kosongkanTransaksi = new javax.swing.JButton();
        b_konfirmasiTransaksi = new javax.swing.JButton();
        b_kembali = new javax.swing.JButton();
        b_cariPeminjam = new javax.swing.JButton();
        panel_keranjangTable = new javax.swing.JPanel();
        scrollPane_tabelKeranjang = new javax.swing.JScrollPane();
        tabelKeranjang = new javax.swing.JTable();
        l_tabelKeranjang = new javax.swing.JLabel();
        b_resetKeranjang = new javax.swing.JButton();
        panel_transaksiTable = new javax.swing.JPanel();
        scrollPane_tabelTransaksi = new javax.swing.JScrollPane();
        tabelTransaksi = new javax.swing.JTable();
        l_tabelTransaksi = new javax.swing.JLabel();
        b_updateTabelTransaksi = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(960, 540));
        setResizable(false);

        panel_Koleksi.setBackground(new java.awt.Color(153, 204, 255));
        panel_Koleksi.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panel_Koleksi.setPreferredSize(new java.awt.Dimension(480, 270));

        b_cariKoleksi.setText("Cari");
        b_cariKoleksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cariKoleksiActionPerformed(evt);
            }
        });

        i_judulKoleksi.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        i_kodeKoleksi.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        l_pencarianKoleksi.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        l_pencarianKoleksi.setForeground(new java.awt.Color(0, 0, 0));
        l_pencarianKoleksi.setText("Pencarian Koleksi");

        f_judulKoleksi.setEnabled(false);
        f_judulKoleksi.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        l_nama.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        l_nama.setForeground(new java.awt.Color(51, 51, 51));
        l_nama.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        l_nama.setText("Judul");
        l_nama.setToolTipText("");
        l_nama.setMaximumSize(new java.awt.Dimension(150, 25));
        l_nama.setMinimumSize(new java.awt.Dimension(150, 25));

        f_penerbit.setEnabled(false);
        f_penerbit.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        l_penerbit.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        l_penerbit.setForeground(new java.awt.Color(51, 51, 51));
        l_penerbit.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        l_penerbit.setText("Penerbit");
        l_penerbit.setToolTipText("");
        l_penerbit.setMaximumSize(new java.awt.Dimension(150, 25));
        l_penerbit.setMinimumSize(new java.awt.Dimension(150, 25));

        l_isbnIssn.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        l_isbnIssn.setForeground(new java.awt.Color(51, 51, 51));
        l_isbnIssn.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        l_isbnIssn.setText("ISSN/ISBN");
        l_isbnIssn.setToolTipText("");
        l_isbnIssn.setMaximumSize(new java.awt.Dimension(150, 25));
        l_isbnIssn.setMinimumSize(new java.awt.Dimension(150, 25));

        f_isbnIssn.setEnabled(false);
        f_isbnIssn.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        f_tipeKoleksi.setEnabled(false);
        f_tipeKoleksi.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        l_tipeKoleksi.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        l_tipeKoleksi.setForeground(new java.awt.Color(51, 51, 51));
        l_tipeKoleksi.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        l_tipeKoleksi.setText("Tipe Koleksi");
        l_tipeKoleksi.setToolTipText("");
        l_tipeKoleksi.setMaximumSize(new java.awt.Dimension(150, 25));
        l_tipeKoleksi.setMinimumSize(new java.awt.Dimension(150, 25));

        b_tambahKoleksi.setBackground(new java.awt.Color(51, 204, 0));
        b_tambahKoleksi.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        b_tambahKoleksi.setForeground(new java.awt.Color(255, 255, 255));
        b_tambahKoleksi.setText("Tambah");
        b_tambahKoleksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_tambahKoleksiActionPerformed(evt);
            }
        });

        b_hapusKoleksi.setBackground(new java.awt.Color(255, 102, 102));
        b_hapusKoleksi.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        b_hapusKoleksi.setForeground(new java.awt.Color(255, 255, 255));
        b_hapusKoleksi.setText("Hapus");
        b_hapusKoleksi.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b_hapusKoleksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_hapusKoleksiActionPerformed(evt);
            }
        });

        f_ketersediaan.setEditable(false);
        f_ketersediaan.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        javax.swing.GroupLayout panel_KoleksiLayout = new javax.swing.GroupLayout(panel_Koleksi);
        panel_Koleksi.setLayout(panel_KoleksiLayout);
        panel_KoleksiLayout.setHorizontalGroup(
            panel_KoleksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_KoleksiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_KoleksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_KoleksiLayout.createSequentialGroup()
                        .addComponent(l_pencarianKoleksi, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 230, Short.MAX_VALUE))
                    .addGroup(panel_KoleksiLayout.createSequentialGroup()
                        .addComponent(i_kodeKoleksi, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i_judulKoleksi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_cariKoleksi, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_KoleksiLayout.createSequentialGroup()
                        .addGroup(panel_KoleksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_KoleksiLayout.createSequentialGroup()
                                .addComponent(l_nama, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(f_judulKoleksi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(panel_KoleksiLayout.createSequentialGroup()
                                .addComponent(l_penerbit, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(f_penerbit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(panel_KoleksiLayout.createSequentialGroup()
                                .addComponent(l_isbnIssn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(f_isbnIssn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(panel_KoleksiLayout.createSequentialGroup()
                                .addComponent(l_tipeKoleksi, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(f_tipeKoleksi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(80, 80, 80))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_KoleksiLayout.createSequentialGroup()
                        .addComponent(f_ketersediaan, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(b_hapusKoleksi, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(b_tambahKoleksi, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panel_KoleksiLayout.setVerticalGroup(
            panel_KoleksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_KoleksiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(l_pencarianKoleksi, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_KoleksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b_cariKoleksi, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel_KoleksiLayout.createSequentialGroup()
                        .addGroup(panel_KoleksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(i_judulKoleksi, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i_kodeKoleksi, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_KoleksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(l_nama, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f_judulKoleksi, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_KoleksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l_penerbit, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(f_penerbit, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_KoleksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l_isbnIssn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(f_isbnIssn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_KoleksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(l_tipeKoleksi, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(f_tipeKoleksi, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_KoleksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_KoleksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(b_tambahKoleksi, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(b_hapusKoleksi, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(f_ketersediaan, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        panel_PeminjamDeadline.setBackground(new java.awt.Color(153, 204, 255));
        panel_PeminjamDeadline.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panel_PeminjamDeadline.setPreferredSize(new java.awt.Dimension(480, 270));

        l_pencarianPeminjam.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        l_pencarianPeminjam.setForeground(new java.awt.Color(0, 0, 0));
        l_pencarianPeminjam.setText("Pencarian Peminjam");

        i_namaPeminjam.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        i_kodePeminjam.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        l_namaPeminjam.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        l_namaPeminjam.setForeground(new java.awt.Color(51, 51, 51));
        l_namaPeminjam.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        l_namaPeminjam.setText("Nama");
        l_namaPeminjam.setToolTipText("");
        l_namaPeminjam.setMaximumSize(new java.awt.Dimension(150, 25));
        l_namaPeminjam.setMinimumSize(new java.awt.Dimension(150, 25));

        f_namaPeminjam.setEnabled(false);
        f_namaPeminjam.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        f_maksPinjam.setEnabled(false);
        f_maksPinjam.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        l_lamaPinjam.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        l_lamaPinjam.setForeground(new java.awt.Color(51, 51, 51));
        l_lamaPinjam.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        l_lamaPinjam.setText("Lama Pinjam");
        l_lamaPinjam.setToolTipText("");
        l_lamaPinjam.setMaximumSize(new java.awt.Dimension(150, 25));
        l_lamaPinjam.setMinimumSize(new java.awt.Dimension(150, 25));

        i_lamaPinjam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 Minggu", "2 Minggu", "3 Minggu", "4 Minggu" }));

        l_dari.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        l_dari.setForeground(new java.awt.Color(51, 51, 51));
        l_dari.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        l_dari.setText("Dari");
        l_dari.setToolTipText("");
        l_dari.setMaximumSize(new java.awt.Dimension(150, 25));
        l_dari.setMinimumSize(new java.awt.Dimension(150, 25));

        f_dari.setEnabled(false);
        f_dari.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        b_kosongkanTransaksi.setBackground(new java.awt.Color(255, 102, 102));
        b_kosongkanTransaksi.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        b_kosongkanTransaksi.setForeground(new java.awt.Color(255, 255, 255));
        b_kosongkanTransaksi.setText("Kosongkan");
        b_kosongkanTransaksi.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b_kosongkanTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_kosongkanTransaksiActionPerformed(evt);
            }
        });

        b_konfirmasiTransaksi.setBackground(new java.awt.Color(51, 204, 0));
        b_konfirmasiTransaksi.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        b_konfirmasiTransaksi.setForeground(new java.awt.Color(255, 255, 255));
        b_konfirmasiTransaksi.setText("Simpan");
        b_konfirmasiTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_konfirmasiTransaksiActionPerformed(evt);
            }
        });

        b_kembali.setBackground(new java.awt.Color(255, 204, 153));
        b_kembali.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        b_kembali.setForeground(new java.awt.Color(255, 255, 255));
        b_kembali.setText("Kembali");
        b_kembali.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b_kembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_kembaliActionPerformed(evt);
            }
        });

        b_cariPeminjam.setText("Cari");
        b_cariPeminjam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cariPeminjamActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_PeminjamDeadlineLayout = new javax.swing.GroupLayout(panel_PeminjamDeadline);
        panel_PeminjamDeadline.setLayout(panel_PeminjamDeadlineLayout);
        panel_PeminjamDeadlineLayout.setHorizontalGroup(
            panel_PeminjamDeadlineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_PeminjamDeadlineLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_PeminjamDeadlineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_PeminjamDeadlineLayout.createSequentialGroup()
                        .addGroup(panel_PeminjamDeadlineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_PeminjamDeadlineLayout.createSequentialGroup()
                                .addComponent(i_kodePeminjam, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(i_namaPeminjam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(panel_PeminjamDeadlineLayout.createSequentialGroup()
                                .addComponent(l_namaPeminjam, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(f_namaPeminjam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_PeminjamDeadlineLayout.createSequentialGroup()
                                .addComponent(l_lamaPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(i_lamaPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(l_dari, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(f_dari, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_PeminjamDeadlineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(f_maksPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b_cariPeminjam, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6))
                    .addGroup(panel_PeminjamDeadlineLayout.createSequentialGroup()
                        .addComponent(l_pencarianPeminjam, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_PeminjamDeadlineLayout.createSequentialGroup()
                        .addComponent(b_kembali)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(b_kosongkanTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(b_konfirmasiTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panel_PeminjamDeadlineLayout.setVerticalGroup(
            panel_PeminjamDeadlineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_PeminjamDeadlineLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(l_pencarianPeminjam, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(panel_PeminjamDeadlineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_PeminjamDeadlineLayout.createSequentialGroup()
                        .addGroup(panel_PeminjamDeadlineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(i_namaPeminjam, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i_kodePeminjam, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(panel_PeminjamDeadlineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(f_maksPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(f_namaPeminjam, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l_namaPeminjam, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_PeminjamDeadlineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(f_dari, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panel_PeminjamDeadlineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(l_lamaPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(i_lamaPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(l_dari, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                        .addGroup(panel_PeminjamDeadlineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b_konfirmasiTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b_kembali, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b_kosongkanTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10))
                    .addGroup(panel_PeminjamDeadlineLayout.createSequentialGroup()
                        .addComponent(b_cariPeminjam, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        panel_keranjangTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panel_keranjangTable.setPreferredSize(new java.awt.Dimension(480, 270));

        tabelKeranjang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "title", "isbn/issn", "tipe"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelKeranjang.getTableHeader().setReorderingAllowed(false);
        scrollPane_tabelKeranjang.setViewportView(tabelKeranjang);

        l_tabelKeranjang.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        l_tabelKeranjang.setText("Tabel Keranjang");

        b_resetKeranjang.setText("Reset");
        b_resetKeranjang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_resetKeranjangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_keranjangTableLayout = new javax.swing.GroupLayout(panel_keranjangTable);
        panel_keranjangTable.setLayout(panel_keranjangTableLayout);
        panel_keranjangTableLayout.setHorizontalGroup(
            panel_keranjangTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_keranjangTableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_keranjangTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane_tabelKeranjang, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
                    .addGroup(panel_keranjangTableLayout.createSequentialGroup()
                        .addComponent(l_tabelKeranjang, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(b_resetKeranjang)))
                .addContainerGap())
        );
        panel_keranjangTableLayout.setVerticalGroup(
            panel_keranjangTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_keranjangTableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_keranjangTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_tabelKeranjang, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_resetKeranjang, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(scrollPane_tabelKeranjang, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        panel_transaksiTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panel_transaksiTable.setPreferredSize(new java.awt.Dimension(480, 270));

        tabelTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "customer id", "from", "due", "items"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelTransaksi.getTableHeader().setReorderingAllowed(false);
        scrollPane_tabelTransaksi.setViewportView(tabelTransaksi);

        l_tabelTransaksi.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        l_tabelTransaksi.setText("Tabel Transaksi");

        b_updateTabelTransaksi.setText("Update Table");
        b_updateTabelTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_updateTabelTransaksiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_transaksiTableLayout = new javax.swing.GroupLayout(panel_transaksiTable);
        panel_transaksiTable.setLayout(panel_transaksiTableLayout);
        panel_transaksiTableLayout.setHorizontalGroup(
            panel_transaksiTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_transaksiTableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_transaksiTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane_tabelTransaksi, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                    .addGroup(panel_transaksiTableLayout.createSequentialGroup()
                        .addComponent(l_tabelTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(b_updateTabelTransaksi)))
                .addContainerGap())
        );
        panel_transaksiTableLayout.setVerticalGroup(
            panel_transaksiTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_transaksiTableLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panel_transaksiTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(l_tabelTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_updateTabelTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane_tabelTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel_Koleksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panel_PeminjamDeadline, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panel_transaksiTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_keranjangTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panel_Koleksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(panel_PeminjamDeadline, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panel_keranjangTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(panel_transaksiTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );

        setSize(new java.awt.Dimension(974, 577));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

	/**
	 * Mengatur warna background pada sebuah komponen menjadi merah
	 */
	private void setRedBG(Component... components) {
		for (Component c : components) {
			c.setBackground(I_RED);
		}
	}

	/**
	 * Mengatur warna background pada sebuah komponen menjadi putih
	 */
	private void setWhiteBG(Component... components) {
		for (Component c : components) {
			c.setBackground(new Color(0xFFFFFF));
		}
	}

	/**
	 * Mengisi field informasi koleksi
	 */
	private void fillFieldKoleksi(Koleksi koleksi) {
		f_judulKoleksi.setText(koleksi.getJudul());
		f_penerbit.setText(koleksi.getPenerbit());
		if (koleksi instanceof Buku b) {
			f_isbnIssn.setText(b.getIsbn());
		} else if (koleksi instanceof Majalah m) {
			f_isbnIssn.setText(m.getIssn());
		} else if (koleksi instanceof Disk d) {
			f_isbnIssn.setText(d.getIsbn());
		}
		f_tipeKoleksi.setText(koleksi.getTipe());
	}

	/**
	 * Mengosongkan field informasi koleksi dan current koleksi
	 */
	private void kosongkanFieldKoleksi() {
		i_kodeKoleksi.setText("");
		i_judulKoleksi.setText("");
		f_judulKoleksi.setText("");
		f_penerbit.setText("");
		f_isbnIssn.setText("");
		f_tipeKoleksi.setText("");
		f_ketersediaan.setText("");
		currentKoleksi = null;

		setWhiteBG(i_kodeKoleksi, i_judulKoleksi, f_ketersediaan);
	}

	/**
	 * Mengosongkan field informasi peminjam dan current peminjam
	 */
	private void kosongkanFieldPeminjam() {
		i_kodePeminjam.setText("");
		i_namaPeminjam.setText("");
		f_namaPeminjam.setText("");
		f_maksPinjam.setText("");
		f_dari.setText("");
		currentPeminjam = null;

		setWhiteBG(i_kodePeminjam, i_namaPeminjam);
	}

    /**
     * Mengisi bagian fields koleksi dengan data dari koleksi yang diberikan dan mengubah warna background
     * menjadi merah jika koleksi tersebut sedang dipinjam atau hijau jika tersedia.
     * */
    private void setKoleksiFields(Koleksi koleksi, TextField i_judulKoleksi) {
        setWhiteBG(i_judulKoleksi);
        currentKoleksi = koleksi;
        fillFieldKoleksi(currentKoleksi);
        if (koleksi.isTersedia()) {
            f_ketersediaan.setText("Tersedia");
            f_ketersediaan.setBackground(new Color(0x8FFF8F));
        } else {
            f_ketersediaan.setText("Dipinjam");
            setRedBG(f_ketersediaan);
        }
    }

	/**
	 * Tombol untuk mengecek koleksi dengan data yang dimasukkan dari database
	 */
	private void b_cariKoleksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cariKoleksiActionPerformed
		final var kodeKoleksi = i_kodeKoleksi.getText().trim();
		final var judulKoleksi = i_judulKoleksi.getText().trim();

		/* Cek apakah kedua kolom kosong */
		if (kodeKoleksi.equals("") && judulKoleksi.equals("")) {
			setRedBG(i_kodeKoleksi, i_judulKoleksi);
			return;
		}

		/* Cari dengan kode koleksi */
		if (!kodeKoleksi.equals("")) {
			final Koleksi koleksi = DatabaseHandler.findKoleksi(kodeKoleksi);

			setRedBG(i_kodeKoleksi);
			if (koleksi != null) { // Guard
                setKoleksiFields(koleksi, i_kodeKoleksi);
                // Jika hasil dengan kode tidak null maka tidak usah mengecek judul koleksi
				return;
			}
		}

		/* Cari dengan judul koleksi */
		if (!judulKoleksi.equals("")) {
			final Koleksi koleksi = DatabaseHandler.findKoleksiByTitle(judulKoleksi);

			setRedBG(i_judulKoleksi);
			if (koleksi != null) { // Guard
                setKoleksiFields(koleksi, i_judulKoleksi);
            }
		}
	}//GEN-LAST:event_b_cariKoleksiActionPerformed

	private void b_cariPeminjamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cariPeminjamActionPerformed
		final var kodePeminjam = i_kodePeminjam.getText().trim();
		final var namaPeminjam = i_namaPeminjam.getText().trim();

		/* Cek apakah kedua kolom kosong */
		if (kodePeminjam.equals("") && namaPeminjam.equals("")) {
			setRedBG(i_kodePeminjam, i_namaPeminjam);
			return;
		}

		/* Cari dengan kode peminjam */
		if (!kodePeminjam.equals("")) {
			final Peminjam peminjam = DatabaseHandler.findPeminjam(kodePeminjam);

			setRedBG(i_kodePeminjam);
			if (peminjam != null) { // Guard
				setWhiteBG(i_kodePeminjam);
				currentPeminjam = peminjam;
				f_namaPeminjam.setText(currentPeminjam.getNama());
				f_maksPinjam.setText(String.valueOf(currentPeminjam.getMaksPinjam()));
				f_dari.setText(LocalDate.now().format(DateTimeFormatter.ofPattern("dd-MM-yyyy")));
				return;
			}
		}

		/* Cari dengan nama peminjam */
		if (!namaPeminjam.equals("")) {
			final Peminjam peminjam = DatabaseHandler.findPeminjamByName(namaPeminjam);

			setRedBG(i_namaPeminjam);
			if (peminjam != null) { // Guard
				setWhiteBG(i_namaPeminjam);
				currentPeminjam = peminjam;
				f_namaPeminjam.setText(currentPeminjam.getNama());
				f_maksPinjam.setText(String.valueOf(currentPeminjam.getMaksPinjam()));
				f_dari.setText(LocalDate.now().format(DateTimeFormatter.ofPattern("dd-MM-yyyy")));
			}
		}
	}//GEN-LAST:event_b_cariPeminjamActionPerformed

	private void b_kosongkanTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_kosongkanTransaksiActionPerformed
		kosongkanFieldKoleksi();
		kosongkanFieldPeminjam();
        keranjangKoleksi.reset();
        updateTabelKeranjang();
	}//GEN-LAST:event_b_kosongkanTransaksiActionPerformed

	/**
	 * Melakukan pembuatan transaksi berdasarkan koleksi yang ada di keranjang serta peminjam yang
	 * dimasukkan melalui parameter {@code peminjam}.
	 *
	 * @param peminjam Peminjam yang melakukan transaksi.
	 * @return {@link Transaksi} Objek Transaksi yang telah dibuat.
	 * @throws IllegalArgumentException Dilempar saat terdapat kesalahan dalam pembuatan transaksi.
	 * */
	public Transaksi buatTransaksi(Peminjam peminjam) throws IllegalArgumentException {
        // Mengecek apabila peminjam kosong
		if (keranjangKoleksi.getArrayKoleksi().isEmpty()) {
			throw new IllegalArgumentException("Keranjang kosong!");
		}

        // Mengecek apabila jumlah koleksi melebihi maksimal pinjam
        if (keranjangKoleksi.size() > peminjam.getMaksPinjam()) {
            throw new IllegalArgumentException("Jumlah koleksi melebihi maksimal pinjam!");
        }

        Date tglPinjam = Date.from(LocalDate.now()
            .atStartOfDay(ZoneId.systemDefault())
            .toInstant());

        int jmlMinggu = switch ((String) Objects.requireNonNull(i_lamaPinjam.getSelectedItem())) {
            case "2 Minggu" -> 2;
            case "3 Minggu" -> 3;
            case "4 Minggu" -> 4;
            default -> 1;
        };
        Date tglKembali = Date.from(LocalDate.now()
            .plusWeeks(jmlMinggu)
            .atStartOfDay(ZoneId.systemDefault())
            .toInstant());

		// Membuat id transaksi.
		String idTransaksi = DataPerpus.generateTransaksiId(dataPerpus.getDataTransaksi());
        return new Transaksi(
            idTransaksi,
            peminjam,
            tglPinjam,
            tglKembali,
            0f,
            keranjangKoleksi.getPreparedKoleksiArray()
        );
	}

	private void b_konfirmasiTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_konfirmasiTransaksiActionPerformed
       /* Mengecek apabila peminjam kosong */
        if (keranjangKoleksi.getArrayKoleksi().isEmpty()) {
            JOptionPane.showMessageDialog(
                this,
                "Keranjang masih kosong!",
                "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

		Transaksi transaksi = buatTransaksi(currentPeminjam);
        System.out.println(transaksi);
        dataPerpus.isiDataTransaksi(transaksi);
        keranjangKoleksi.reset();
        updateTabelKeranjang();
        updateTabelTransaksi();
        // Membuat JOptionPane untuk menampilkan bahwa berhasil menambahkan transaksi pinjam
        JOptionPane.showMessageDialog(
            this,
            "Berhasil menambahkan transaksi pinjam dengan id: " + transaksi.getIdTransaksi() + "!",
            "Success", JOptionPane.INFORMATION_MESSAGE
        );
	}//GEN-LAST:event_b_konfirmasiTransaksiActionPerformed

	private void b_kembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_kembaliActionPerformed
		setVisible(false);
	}//GEN-LAST:event_b_kembaliActionPerformed

    private void updateTabelKeranjang() {
        tabelKeranjang.setModel(keranjangKoleksi.getTableModel());
        tabelKeranjang.repaint();
        tabelKeranjang.revalidate();
    }

	private void b_tambahKoleksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_tambahKoleksiActionPerformed
        /* Mengecek apabila koleksi tidak ditemukan */
		if (currentKoleksi == null) {
            JOptionPane.showMessageDialog(
                this,
                "Koleksi tidak ditemukan!",
                "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        /* Mengecek apabila koleksi sedang dipinjam */
        if (!currentKoleksi.isTersedia()) {
            JOptionPane.showMessageDialog(
                this,
                "Koleksi sedang dipinjam!",
                "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        /* Memasukkan koleksi ke keranjang (sudah dengan pengecekan) */
        if (keranjangKoleksi.addKoleksi(currentKoleksi)) {
            updateTabelKeranjang();
            kosongkanFieldKoleksi();
        } else {
            JOptionPane.showMessageDialog(
                this,
                "Koleksi sudah ada di keranjang!",
                "Error", JOptionPane.ERROR_MESSAGE);
        }
	}//GEN-LAST:event_b_tambahKoleksiActionPerformed

	private void b_hapusKoleksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_hapusKoleksiActionPerformed
		kosongkanFieldKoleksi();
	}//GEN-LAST:event_b_hapusKoleksiActionPerformed

    private void b_resetKeranjangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_resetKeranjangActionPerformed
        keranjangKoleksi.reset();
        updateTabelKeranjang();
    }//GEN-LAST:event_b_resetKeranjangActionPerformed

	public DefaultTableModel getTableTransaksiModel(Transaksi[] arrayTransaksi) {
		if (arrayTransaksi.length == 0) {
			return new DefaultTableModel(
                new Object[][]{},
                new String[]{"id", "customer id", "from", "due", "items"}
            );
		}
		Object[][] data = new Object[arrayTransaksi.length][5];
		String[] columns = {"id", "customer id", "from", "due", "items"};
		for (int i = 0; i < arrayTransaksi.length; i++) {
            final var currentRow = arrayTransaksi[i];
            data[i][0] = currentRow.getIdTransaksi();
            data[i][1] = currentRow.getPeminjam().getIdPeminjam();
            SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy");
            data[i][2] = formatter.format(currentRow.getTglPinjam());
            data[i][3] = formatter.format(currentRow.getTglKembali());
            data[i][4] = currentRow.getStringListIdKoleksi();
        }
		return new DefaultTableModel(data, columns) {
			@Override
			public boolean isCellEditable(int rowIndex, int
				colIndex) {
				return false;
			}
		};
	}

    public void updateTabelTransaksi() {
        tabelTransaksi.setModel(
            getTableTransaksiModel(
                // Konversi dari hashmap ke array
                dataPerpus.getDataTransaksi()
                    .values()
                    .toArray(new Transaksi[0]))
        );
        tabelTransaksi.repaint();
        tabelTransaksi.revalidate();
    }

    private void b_updateTabelTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_updateTabelTransaksiActionPerformed
        // Melakukan update tabel transaksi dari database
        dataPerpus.setDataTransaksi(DatabaseHandler.readAllDataTransaksi());
        updateTabelTransaksi();
        // Reset keranjang koleksi
        keranjangKoleksi.reset();
    }//GEN-LAST:event_b_updateTabelTransaksiActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_cariKoleksi;
    private javax.swing.JButton b_cariPeminjam;
    private javax.swing.JButton b_hapusKoleksi;
    private javax.swing.JButton b_kembali;
    private javax.swing.JButton b_konfirmasiTransaksi;
    private javax.swing.JButton b_kosongkanTransaksi;
    private javax.swing.JButton b_resetKeranjang;
    private javax.swing.JButton b_tambahKoleksi;
    private javax.swing.JButton b_updateTabelTransaksi;
    private java.awt.TextField f_dari;
    private java.awt.TextField f_isbnIssn;
    private java.awt.TextField f_judulKoleksi;
    private java.awt.TextField f_ketersediaan;
    private java.awt.TextField f_maksPinjam;
    private java.awt.TextField f_namaPeminjam;
    private java.awt.TextField f_penerbit;
    private java.awt.TextField f_tipeKoleksi;
    private java.awt.TextField i_judulKoleksi;
    private java.awt.TextField i_kodeKoleksi;
    private java.awt.TextField i_kodePeminjam;
    private javax.swing.JComboBox<String> i_lamaPinjam;
    private java.awt.TextField i_namaPeminjam;
    private javax.swing.JLabel l_dari;
    private javax.swing.JLabel l_isbnIssn;
    private javax.swing.JLabel l_lamaPinjam;
    private javax.swing.JLabel l_nama;
    private javax.swing.JLabel l_namaPeminjam;
    private javax.swing.JLabel l_pencarianKoleksi;
    private javax.swing.JLabel l_pencarianPeminjam;
    private javax.swing.JLabel l_penerbit;
    private javax.swing.JLabel l_tabelKeranjang;
    private javax.swing.JLabel l_tabelTransaksi;
    private javax.swing.JLabel l_tipeKoleksi;
    private javax.swing.JPanel panel_Koleksi;
    private javax.swing.JPanel panel_PeminjamDeadline;
    private javax.swing.JPanel panel_keranjangTable;
    private javax.swing.JPanel panel_transaksiTable;
    private javax.swing.JScrollPane scrollPane_tabelKeranjang;
    private javax.swing.JScrollPane scrollPane_tabelTransaksi;
    private javax.swing.JTable tabelKeranjang;
    private javax.swing.JTable tabelTransaksi;
    // End of variables declaration//GEN-END:variables
}
