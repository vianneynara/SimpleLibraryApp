/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

import backend.Buku;
import backend.Disk;
import backend.Koleksi;
import backend.Majalah;

import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.FocusEvent;
import java.time.LocalDate;
import java.util.Enumeration;
import java.util.List;
import java.util.Random;

/**
 *
 * @author narwa
 */
public class FormRegistrasiKoleksi extends javax.swing.JPanel {

    private final Color I_RED = new Color(0xFF5959);
    private final JFrame parent;

	/** Atribut kelas ini menyimpan seluruh data yang disimpan. */
	private DataPerpus dataPerpus;

    /**
     * Creates new form FormRegistrasiKoleksi
     */
    public FormRegistrasiKoleksi(JFrame parent, DataPerpus dataPerpus) {
        initComponents();
        this.parent = parent;
        this.dataPerpus = dataPerpus;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inp_regTipeKoleksi = new javax.swing.ButtonGroup();
        registKoleksiTitle = new javax.swing.JLabel();
        l_judulKoleksi = new javax.swing.JLabel();
        i_judulKoleksi = new java.awt.TextField();
        l_penerbit = new javax.swing.JLabel();
        i_penerbit = new java.awt.TextField();
        l_tipeKoleksi = new javax.swing.JLabel();
        i_jenisBuku = new javax.swing.JRadioButton();
        i_jenisMajalah = new javax.swing.JRadioButton();
        i_jenisDisk = new javax.swing.JRadioButton();
        l_isbnIssn = new javax.swing.JLabel();
        i_isbnIssn = new java.awt.TextField();
        l_jmlHalaman = new javax.swing.JLabel();
        i_jmlHalaman = new javax.swing.JSpinner();
        l_volume = new javax.swing.JLabel();
        i_volume = new javax.swing.JSpinner();
        l_seri = new javax.swing.JLabel();
        i_seri = new javax.swing.JSpinner();
        l_format = new javax.swing.JLabel();
        i_format = new javax.swing.JComboBox<>();
        b_simpanRegKoleksi = new javax.swing.JButton();
        b_kosongkanRegKoleksi = new javax.swing.JButton();
        l_simpanKoleksiEmptyIndicator = new javax.swing.JLabel();
        l_tahunTerbit = new javax.swing.JLabel();
        i_tahunTerbit = new java.awt.TextField();
        i_identifier = new java.awt.TextField();
        tableScrollPane = new javax.swing.JScrollPane();
        tabelKoleksi = new javax.swing.JTable();
        b_refresh = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(729, 517));

        registKoleksiTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        registKoleksiTitle.setText("Registrasi Data Koleksi");

        l_judulKoleksi.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        l_judulKoleksi.setText("Judul / Title");
        l_judulKoleksi.setMaximumSize(new java.awt.Dimension(150, 25));
        l_judulKoleksi.setMinimumSize(new java.awt.Dimension(150, 25));

        i_judulKoleksi.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        i_judulKoleksi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                i_judulKoleksiFocusLost(evt);
            }
        });
        i_judulKoleksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_judulKoleksiActionPerformed(evt);
            }
        });

        l_penerbit.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        l_penerbit.setText("Penerbit");
        l_penerbit.setMaximumSize(new java.awt.Dimension(150, 25));
        l_penerbit.setMinimumSize(new java.awt.Dimension(150, 25));

        i_penerbit.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        i_penerbit.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                i_penerbitFocusLost(evt);
            }
        });
        i_penerbit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_penerbitActionPerformed(evt);
            }
        });

        l_tipeKoleksi.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        l_tipeKoleksi.setText("Tipe Koleksi");
        l_tipeKoleksi.setMaximumSize(new java.awt.Dimension(150, 25));
        l_tipeKoleksi.setMinimumSize(new java.awt.Dimension(150, 25));

        inp_regTipeKoleksi.add(i_jenisBuku);
        i_jenisBuku.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        i_jenisBuku.setSelected(true);
        i_jenisBuku.setText("Buku");
        i_jenisBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_jenisBukuActionPerformed(evt);
            }
        });

        inp_regTipeKoleksi.add(i_jenisMajalah);
        i_jenisMajalah.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        i_jenisMajalah.setText("Majalah");
        i_jenisMajalah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_jenisMajalahActionPerformed(evt);
            }
        });

        inp_regTipeKoleksi.add(i_jenisDisk);
        i_jenisDisk.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        i_jenisDisk.setText("Disk");
        i_jenisDisk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_jenisDiskActionPerformed(evt);
            }
        });

        l_isbnIssn.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        l_isbnIssn.setText("ISBN / ISSN");
        l_isbnIssn.setMaximumSize(new java.awt.Dimension(150, 25));
        l_isbnIssn.setMinimumSize(new java.awt.Dimension(150, 25));

        i_isbnIssn.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        i_isbnIssn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                i_isbnIssnFocusLost(evt);
            }
        });
        i_isbnIssn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_isbnIssnActionPerformed(evt);
            }
        });

        l_jmlHalaman.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        l_jmlHalaman.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        l_jmlHalaman.setText("Jml. Halaman");
        l_jmlHalaman.setMaximumSize(new java.awt.Dimension(150, 25));
        l_jmlHalaman.setMinimumSize(new java.awt.Dimension(150, 25));

        i_jmlHalaman.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        i_jmlHalaman.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        l_volume.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        l_volume.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        l_volume.setText("Volume");
        l_volume.setEnabled(false);
        l_volume.setMaximumSize(new java.awt.Dimension(150, 25));
        l_volume.setMinimumSize(new java.awt.Dimension(150, 25));

        i_volume.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        i_volume.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        i_volume.setEnabled(false);

        l_seri.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        l_seri.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        l_seri.setText("Seri");
        l_seri.setEnabled(false);
        l_seri.setMaximumSize(new java.awt.Dimension(150, 25));
        l_seri.setMinimumSize(new java.awt.Dimension(150, 25));

        i_seri.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        i_seri.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        i_seri.setEnabled(false);

        l_format.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        l_format.setText("Format");
        l_format.setEnabled(false);
        l_format.setMaximumSize(new java.awt.Dimension(150, 25));
        l_format.setMinimumSize(new java.awt.Dimension(150, 25));

        i_format.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Audio", "Video", "Document" }));
        i_format.setEnabled(false);
        i_format.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_formatActionPerformed(evt);
            }
        });

        b_simpanRegKoleksi.setBackground(new java.awt.Color(51, 204, 0));
        b_simpanRegKoleksi.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        b_simpanRegKoleksi.setForeground(new java.awt.Color(255, 255, 255));
        b_simpanRegKoleksi.setText("Simpan");
        b_simpanRegKoleksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_simpanRegKoleksiActionPerformed(evt);
            }
        });

        b_kosongkanRegKoleksi.setBackground(new java.awt.Color(255, 102, 102));
        b_kosongkanRegKoleksi.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        b_kosongkanRegKoleksi.setForeground(new java.awt.Color(255, 255, 255));
        b_kosongkanRegKoleksi.setText("Kosongkan");
        b_kosongkanRegKoleksi.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b_kosongkanRegKoleksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_kosongkanRegKoleksiActionPerformed(evt);
            }
        });

        l_simpanKoleksiEmptyIndicator.setBackground(new java.awt.Color(153, 153, 153));
        l_simpanKoleksiEmptyIndicator.setForeground(new java.awt.Color(255, 51, 51));
        l_simpanKoleksiEmptyIndicator.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        l_simpanKoleksiEmptyIndicator.setText("Terdapat data yang masih kosong atau tidak benar!");
        l_simpanKoleksiEmptyIndicator.setVisible(false);

        l_tahunTerbit.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        l_tahunTerbit.setText("Tahun");
        l_tahunTerbit.setMaximumSize(new java.awt.Dimension(150, 25));
        l_tahunTerbit.setMinimumSize(new java.awt.Dimension(150, 25));

        i_tahunTerbit.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        i_tahunTerbit.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                i_tahunTerbitFocusLost(evt);
            }
        });
        i_tahunTerbit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_tahunTerbitActionPerformed(evt);
            }
        });

        i_identifier.setEnabled(false);
        i_identifier.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        i_identifier.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                i_identifierFocusLost(evt);
            }
        });
        i_identifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_identifierActionPerformed(evt);
            }
        });

        tabelKoleksi.setAutoCreateRowSorter(true);
        tabelKoleksi.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tabelKoleksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "tipe", "judul", "penerbit", "tahun terbit", "isbn/issn"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelKoleksi.setToolTipText("Data yang sudah tercatat dalam data");
        tabelKoleksi.setRowHeight(16);
        tabelKoleksi.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent event) {
                retrieveData();
            }
        });
        tableScrollPane.setViewportView(tabelKoleksi);

        b_refresh.setText("Refresh table");
        b_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_refreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(registKoleksiTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(50, 50, 50)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(l_penerbit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(l_isbnIssn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(l_tipeKoleksi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(l_judulKoleksi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(l_tahunTerbit, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(i_tahunTerbit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(l_format, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(i_format, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(i_judulKoleksi, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(i_penerbit, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(i_isbnIssn, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(i_jenisDisk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(i_jenisMajalah, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(i_jenisBuku, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(20, 20, 20)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(l_jmlHalaman, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(l_volume, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(l_seri, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(i_volume, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(i_jmlHalaman, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(i_seri, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(b_refresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(i_identifier, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tableScrollPane)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(l_simpanKoleksiEmptyIndicator, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_kosongkanRegKoleksi, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(b_simpanRegKoleksi, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(registKoleksiTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(i_judulKoleksi, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_judulKoleksi, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(i_identifier, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(l_penerbit, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(i_penerbit, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(i_isbnIssn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_isbnIssn, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(i_jmlHalaman, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(i_jenisBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(l_tipeKoleksi, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(i_jenisMajalah, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i_volume, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i_tahunTerbit, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l_tahunTerbit, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(i_seri, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i_jenisDisk, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i_format, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l_format, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b_refresh)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(l_jmlHalaman, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(l_volume, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_seri, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_simpanRegKoleksi, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_kosongkanRegKoleksi, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_simpanKoleksiEmptyIndicator, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void i_judulKoleksiFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_i_judulKoleksiFocusLost
        String text = i_judulKoleksi.getText().trim();
        if (!Checker.isAlphabetSpace(text, 3)) {
            i_judulKoleksi.setBackground(I_RED);
        } else {
            i_judulKoleksi.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_i_judulKoleksiFocusLost

    private void i_judulKoleksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_judulKoleksiActionPerformed

    }//GEN-LAST:event_i_judulKoleksiActionPerformed

    private void i_penerbitFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_i_penerbitFocusLost
        String text = i_penerbit.getText().trim();
        if (!Checker.isAlphabetSpace(text, 3)) {
            i_penerbit.setBackground(I_RED);
        } else {
            i_penerbit.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_i_penerbitFocusLost

    private void i_penerbitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_penerbitActionPerformed

    }//GEN-LAST:event_i_penerbitActionPerformed

    private void i_jenisBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_jenisBukuActionPerformed
        disableInputFields();                               // mematikan semua fields spesifik

        /* Menyalakan label dan input yang relevan dengan tipe koleksinya. l: Label, i: Input.*/
        l_jmlHalaman.setEnabled(true);
        i_jmlHalaman.setEnabled(true);
        enableGeneralInputFields();
    }//GEN-LAST:event_i_jenisBukuActionPerformed

    private void i_jenisMajalahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_jenisMajalahActionPerformed
        disableInputFields();                               // mematikan semua fields spesifik

        /* Menyalakan label dan input yang relevan dengan tipe koleksinya. l: Label, i: Input.*/
        l_volume.setEnabled(true);
        i_volume.setEnabled(true);
        l_seri.setEnabled(true);
        i_seri.setEnabled(true);
        enableGeneralInputFields();
    }//GEN-LAST:event_i_jenisMajalahActionPerformed

    private void i_jenisDiskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_jenisDiskActionPerformed
        disableInputFields();                               // mematikan semua fields spesifik

        /* Menyalakan label dan input yang relevan dengan tipe koleksinya. l: Label, i: Input.*/
        l_format.setEnabled(true);
        i_format.setEnabled(true);
        enableGeneralInputFields();
    }//GEN-LAST:event_i_jenisDiskActionPerformed

    private void i_isbnIssnFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_i_isbnIssnFocusLost
        if (!Checker.isNomor(i_isbnIssn.getText().trim().replaceAll("[\\s-]", ""), 13)) {
            i_isbnIssn.setBackground(I_RED);
        } else {
            i_isbnIssn.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_i_isbnIssnFocusLost

    private void i_isbnIssnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_isbnIssnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_i_isbnIssnActionPerformed

    private void i_formatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_formatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_i_formatActionPerformed

    private void b_simpanRegKoleksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_simpanRegKoleksiActionPerformed
        /* Variabel-variabel penyimpan data */
        String judul = i_judulKoleksi.getText().trim();
        String penerbit = i_penerbit.getText().trim();
        String isbnIssn = i_isbnIssn.getText().trim().replaceAll("[\\s-]+", "");

        String tipeKoleksi = "";
        /* Melakukan iterasi setiap button pada button group, mencari button yang dipilih. */
        for (Enumeration<AbstractButton> bg = inp_regTipeKoleksi.getElements(); bg.hasMoreElements(); ) {
            AbstractButton b = bg.nextElement();

            if (b.isSelected()) {
                tipeKoleksi = b.getText();
                break;
            }
        }

        /* Variabel-variabel penyimpan data (2) */
        int jmlHalaman = (int) i_jmlHalaman.getValue();
        int volume = (int) i_volume.getValue();
        int seri = (int) i_seri.getValue();
        String format = (String) i_format.getSelectedItem();

        FocusEvent eventPlaceholder = new FocusEvent(this, FocusEvent.FOCUS_LOST);
        /* mengecek apakah terdapat field yang kosong setelah ditrim */
        for (TextField field : new TextField[]{i_judulKoleksi, i_penerbit, i_isbnIssn}) {
            if (Checker.stringIsEmpty(field.getText().trim())) {
                l_simpanKoleksiEmptyIndicator.setVisible(true);
                field.getFocusListeners()[0].focusLost(eventPlaceholder);
                JOptionPane.showMessageDialog(
                    this.parent,
                    "Terdapat field input yang masih kosong/salah! (Highlight merah)",
                    "Warning",
                    JOptionPane.INFORMATION_MESSAGE
                );
                return;
            }
        }

        /* mengecek apakah format isbn sudah valid*/
        if (!Checker.isNomor(isbnIssn, 13)) {
            l_simpanKoleksiEmptyIndicator.setVisible(true);
            JOptionPane.showMessageDialog(
                this.parent,
                "Field ISBN belum sesuai! Harap masukkan 13 digit nomor ISBN!",
                "Warning",
                JOptionPane.INFORMATION_MESSAGE
            );
            return;
        }

        /* mengecek apakah format tahun sudah valid*/
        if (!Checker.isNomor(i_tahunTerbit.getText().trim())) {
            try {
                Integer.parseInt(i_tahunTerbit.getText());
            } catch (NumberFormatException ex) {
                l_simpanKoleksiEmptyIndicator.setVisible(true);
                JOptionPane.showMessageDialog(
                    this.parent,
                    "Field tahun terbit belum diisi!",
                    "Warning",
                    JOptionPane.INFORMATION_MESSAGE
                );
                return;
            }
        }
        if (Integer.parseInt(i_tahunTerbit.getText()) > LocalDate.now().getYear()) {
            l_simpanKoleksiEmptyIndicator.setVisible(true);
            JOptionPane.showMessageDialog(
                this.parent,
                "Tahun terbit tidak melebihi tahun sekarang.",
                "Warning",
                JOptionPane.INFORMATION_MESSAGE
            );
            return;
        }
        l_simpanKoleksiEmptyIndicator.setVisible(false);

        final String noIdKoleksi = generateId(
            (tipeKoleksi.equals("Buku") ? "B" : (tipeKoleksi.equals("Majalah")) ? "M" : "D"), 5);
        dataPerpus.isiDataKoleksi(
            buatKoleksi(
                noIdKoleksi,
                judul,
                penerbit,
                String.valueOf(LocalDate.now().getYear()),
                isbnIssn,
                tipeKoleksi,
                jmlHalaman,
                volume,
                seri,
                format
            )
        );

        final String finalTipeKoleksi = tipeKoleksi;
        switch (tipeKoleksi) {
            case "Buku" -> EventQueue.invokeLater(
                () -> new RegistrasiKoleksiBerhasil(parent, true)
                    .isiField(finalTipeKoleksi, judul, penerbit, isbnIssn, jmlHalaman, noIdKoleksi)
                    .setVisible(true)
            );
            case "Majalah" -> EventQueue.invokeLater(
                () -> new RegistrasiKoleksiBerhasil(parent, true)
                    .isiField(finalTipeKoleksi, judul, penerbit, isbnIssn, volume, seri, noIdKoleksi)
                    .setVisible(true)
            );
            default -> EventQueue.invokeLater(
                () -> new RegistrasiKoleksiBerhasil(parent, true)
                    .isiField(finalTipeKoleksi, judul, penerbit, isbnIssn, format, noIdKoleksi)
                    .setVisible(true)
            );
        }
        kosongkanRegKoleksi();
        updateTable();
    }//GEN-LAST:event_b_simpanRegKoleksiActionPerformed

    private void b_kosongkanRegKoleksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_kosongkanRegKoleksiActionPerformed
        kosongkanRegKoleksi();                              // panggil metode yang mengosongkan reg. peminjam

        l_simpanKoleksiEmptyIndicator.setVisible(false);    // mematikan indikator field masih kosong
    }//GEN-LAST:event_b_kosongkanRegKoleksiActionPerformed

    private void i_tahunTerbitFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_i_tahunTerbitFocusLost
        if (!Checker.isNomor(i_tahunTerbit.getText().trim())) {
            try {
                Integer.parseInt(i_tahunTerbit.getText());
            } catch (NumberFormatException ex) {
                i_tahunTerbit.setBackground(I_RED);
            }
        } else if (Integer.parseInt(i_tahunTerbit.getText()) > LocalDate.now().getYear()) {
            i_tahunTerbit.setBackground(I_RED);
        } else {
            i_tahunTerbit.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_i_tahunTerbitFocusLost

    private void i_tahunTerbitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_tahunTerbitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_i_tahunTerbitActionPerformed

    private void i_identifierFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_i_identifierFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_i_identifierFocusLost

    private void i_identifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_identifierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_i_identifierActionPerformed

    private void b_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_refreshActionPerformed
        updateTable();
    }//GEN-LAST:event_b_refreshActionPerformed

    /**
     * Membuat koleksi sesuai dengan tipe koleksi yang dimasukkan, menyesuaikan kelas yang akan digunakan
     * sebagai penyimpan.
     *
     * @return {@link Koleksi}
     * */
    private Koleksi buatKoleksi(String id, String judul, String penerbit, String tahunTerbit, String isbnIssn, String tipeKoleksi, int jmlHalaman, int volume, int seri, String format) {
        Koleksi c = switch (tipeKoleksi) {
            case "Buku" -> new Buku(id, judul, penerbit, tahunTerbit, isbnIssn, jmlHalaman);
            case "Majalah" -> new Majalah(id, judul, penerbit, tahunTerbit, isbnIssn, volume, seri);
            default -> new Disk(id, judul, penerbit, tahunTerbit, isbnIssn, format);
        };
        System.out.println("Created: " + c);
        return c;
    }

    /**
     * Melakukan pembaruan konten / isi pada {@link #tabelKoleksi} sehingga ditampilkan dengan konten yang baru
     * kemudian menampilkan model tabel yang terbaru. Model yang diperbarui juga bersifat non-editable, tidak bisa
     * diedit isinya secara langsung.
     * */
    private void updateTable() {
        List<Koleksi> listKoleksi = dataPerpus.getListKoleksi();
        Object[][] data = new Object[listKoleksi.size()][6];
        String[] columns = {"id", "tipe", "judul", "penerbit", "tahun terbit", "isbn/issn"};
        for (int i = 0; i < listKoleksi.size(); i++) {
            final var currentRow = listKoleksi.get(i);
            data[i][0] = currentRow.getId();
            data[i][1] =
                (currentRow instanceof Buku) ? "Buku" :
                    (currentRow instanceof Majalah) ? "Majalah" :
                        "Disk";
            data[i][2] = currentRow.getJudul();
            data[i][3] = currentRow.getPenerbit();
            data[i][4] = currentRow.getTahunTerbit();
            data[i][5] =
                (currentRow instanceof Buku b) ? b.getIsbn() :
                    (currentRow instanceof Majalah m) ? m.getIssn() :
                        ((Disk) currentRow).getIsbn();
        }
        var newModel = new DefaultTableModel(data, columns) {
            @Override
            public boolean isCellEditable(int rowIndex, int
                colIndex) {
                return false;
            }
        };
        tabelKoleksi.setModel(newModel);
    }

    /**
     * Membuat id random dengan prefix dan format yang ditentukan.
     * */
    public static String generateId(String prefix, int numDigits) {
        if (numDigits < 0) {
            throw new IllegalArgumentException("Number of digits should be non-negative.");
        }

        StringBuilder idBuilder = new StringBuilder(prefix);
        Random random = new Random();

        for (int i = 0; i < numDigits; i++) {
            int digit = random.nextInt(10);
            idBuilder.append(digit);
        }

        return idBuilder.toString();
    }

    /**
     * Menyetel seluruh fields spesial dalam formulir registrasi koleksi ke mati (disabled).
     */
    private void disableInputFields() {
        i_judulKoleksi.setEnabled(false);
        i_penerbit.setEnabled(false);
        i_isbnIssn.setEnabled(false);
        i_jenisBuku.setEnabled(false);
        i_jenisMajalah.setEnabled(false);
        i_jenisDisk.setEnabled(false);
        i_jmlHalaman.setEnabled(false);
        i_volume.setEnabled(false);
        i_seri.setEnabled(false);
        i_format.setEnabled(false);
        i_tahunTerbit.setEnabled(false);
    }

    /**
     * Menyalakan input fields umum.
     * */
    private void enableGeneralInputFields() {
        l_judulKoleksi.setEnabled(true);
        i_judulKoleksi.setEnabled(true);
        l_tahunTerbit.setEnabled(true);
        i_tahunTerbit.setEnabled(true);
        i_jenisBuku.setEnabled(true);
        i_jenisMajalah.setEnabled(true);
        i_jenisDisk.setEnabled(true);
        i_penerbit.setEnabled(true);
        i_isbnIssn.setEnabled(true);
    }

    /**
     * Mengosongkan/mengatur seluruh field registrasi koleksi dengan nilai awal.
     */
    private void kosongkanRegKoleksi() {
        i_judulKoleksi.setText("");
        i_penerbit.setText("");
        i_isbnIssn.setText("");
        b_simpanRegKoleksi.setEnabled(true);

        /* Memilih pilihan "Buku" dan mematikan kolom input spesifik lain kecuali jumlah halaman */
        inp_regTipeKoleksi.setSelected(i_jenisBuku.getModel(), true);
        disableInputFields();
        i_judulKoleksi.setEnabled(true);
        i_penerbit.setEnabled(true);
        i_isbnIssn.setEnabled(true);
        i_tahunTerbit.setEnabled(true);
        i_jenisDisk.setEnabled(true);
        i_jmlHalaman.setEnabled(true);
        i_jmlHalaman.setValue(1);
        i_volume.setValue(1);
        i_seri.setValue(1);
        i_format.setSelectedIndex(0);

        /* Melakukan reset warna background tiap field menjadi putih */
        for (TextField c : new TextField[] {i_judulKoleksi, i_penerbit, i_isbnIssn}) {
            c.setBackground(Color.WHITE);
        }

        i_identifier.setText("");
    }

    /**
     * Metode ini mengembalikan data yang ada pada sel yang sedang dipilih ke input fields. Untuk membautnya tidak dapat
     * di edit, metode ini juga mematikan input fields dan tombol simpan.
     * */
    private void retrieveData() {
        kosongkanRegKoleksi();
        List<Koleksi> listPeminjam = dataPerpus.getListKoleksi();
        int rowIndex = tabelKoleksi.getSelectedRow();
        if (rowIndex != -1) {
            final var koleksi = listPeminjam.get(rowIndex);
            /* Memasukkan data pada baris yang dipilih kee input fields */
            i_judulKoleksi.setText(koleksi.getJudul());
            i_penerbit.setText(koleksi.getPenerbit());
            if (koleksi instanceof Buku b) {
                i_isbnIssn.setText(b.getIsbn());
                i_jmlHalaman.setValue(b.getJumlahHalaman());
            } else if (koleksi instanceof Majalah m) {
                i_isbnIssn.setText(m.getIssn());
                i_volume.setValue(m.getVolume());
                i_seri.setValue(m.getVolume());
            } else {
                i_isbnIssn.setText(((Disk) koleksi).getIsbn());
                final var format = ((Disk) koleksi).getFormat();
                i_format.setSelectedIndex(
                    format.equals("Audio") ? 0 :
                        format.equals("Video") ? 1 :
                            2
                );
            }
            i_tahunTerbit.setText(koleksi.getTahunTerbit());
            inp_regTipeKoleksi.setSelected(
                (koleksi instanceof Buku) ? i_jenisBuku.getModel() :
                    (koleksi instanceof Majalah) ? i_jenisMajalah.getModel() :
                        i_jenisDisk.getModel(),
                true
            );
            
            disableInputFields();
            b_simpanRegKoleksi.setEnabled(false);
            i_identifier.setText(koleksi.getId());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_kosongkanRegKoleksi;
    private javax.swing.JButton b_refresh;
    private javax.swing.JButton b_simpanRegKoleksi;
    private javax.swing.JComboBox<String> i_format;
    private java.awt.TextField i_identifier;
    private java.awt.TextField i_isbnIssn;
    private javax.swing.JRadioButton i_jenisBuku;
    private javax.swing.JRadioButton i_jenisDisk;
    private javax.swing.JRadioButton i_jenisMajalah;
    private javax.swing.JSpinner i_jmlHalaman;
    private java.awt.TextField i_judulKoleksi;
    private java.awt.TextField i_penerbit;
    private javax.swing.JSpinner i_seri;
    private java.awt.TextField i_tahunTerbit;
    private javax.swing.JSpinner i_volume;
    private javax.swing.ButtonGroup inp_regTipeKoleksi;
    private javax.swing.JLabel l_format;
    private javax.swing.JLabel l_isbnIssn;
    private javax.swing.JLabel l_jmlHalaman;
    private javax.swing.JLabel l_judulKoleksi;
    private javax.swing.JLabel l_penerbit;
    private javax.swing.JLabel l_seri;
    private javax.swing.JLabel l_simpanKoleksiEmptyIndicator;
    private javax.swing.JLabel l_tahunTerbit;
    private javax.swing.JLabel l_tipeKoleksi;
    private javax.swing.JLabel l_volume;
    private javax.swing.JLabel registKoleksiTitle;
    private javax.swing.JTable tabelKoleksi;
    private javax.swing.JScrollPane tableScrollPane;
    // End of variables declaration//GEN-END:variables
}
